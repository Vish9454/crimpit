# Generated by Django 3.1.7 on 2021-05-10 12:13

import accounts.models
from django.conf import settings
import django.contrib.auth.models
from django.db import migrations, models
import django.db.models.deletion
import multiselectfield.db.fields


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Created At')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Last Updated At')),
                ('updated_by', models.IntegerField(blank=True, null=True, verbose_name='Updated by')),
                ('is_deleted', models.BooleanField(default=False, verbose_name='Is Deleted')),
                ('deleted_at', models.DateTimeField(blank=True, null=True)),
                ('username', models.CharField(blank=True, max_length=50, null=True, verbose_name='User Name')),
                ('first_name', models.CharField(blank=True, max_length=50, null=True, verbose_name='First Name')),
                ('last_name', models.CharField(blank=True, max_length=50, null=True, verbose_name='Last Name')),
                ('full_name', models.CharField(blank=True, max_length=120, null=True, verbose_name='Full Name')),
                ('email', models.EmailField(max_length=80, unique=True, verbose_name='Email')),
                ('phone_number', models.CharField(blank=True, max_length=25, null=True, verbose_name='Phone Number')),
                ('is_email_verified', models.BooleanField(default=False, verbose_name='Email Verified')),
                ('is_phone_verified', models.BooleanField(default=False, verbose_name='Phone Verified')),
                ('is_active', models.BooleanField(default=True, verbose_name='Active')),
                ('is_staff', models.BooleanField(default=False, verbose_name='Is Staff')),
                ('is_superuser', models.BooleanField(default=False, verbose_name='SuperUser')),
            ],
            options={
                'verbose_name': 'User',
                'verbose_name_plural': 'Users',
                'ordering': ['id'],
                'index_together': {('email', 'phone_number', 'updated_at')},
            },
            managers=[
                ('objects', accounts.models.ActiveUserManager()),
                ('all_objects', accounts.models.ActiveObjectsManager()),
                ('all_delete_objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='UserSubscription',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Created At')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Last Updated At')),
                ('updated_by', models.IntegerField(blank=True, null=True, verbose_name='Updated by')),
                ('is_deleted', models.BooleanField(default=False, verbose_name='Is Deleted')),
                ('deleted_at', models.DateTimeField(blank=True, null=True)),
                ('is_stripe_customer', models.BooleanField(default=False, verbose_name='StripeCustomer')),
                ('is_subscribed', models.BooleanField(default=False, verbose_name='Subscribed User')),
                ('subscription_start', models.DateTimeField(blank=True, null=True, verbose_name='Subscription Start')),
                ('subscription_end', models.DateTimeField(blank=True, null=True, verbose_name='Subscription End')),
                ('subscription_interval', models.CharField(blank=True, max_length=20, null=True, verbose_name='Subscription Interval')),
                ('subscription_status', models.IntegerField(choices=[(1, 'Active'), (2, 'Inactive')], default=2, verbose_name='Subscription status')),
                ('is_free', models.BooleanField(default=False, verbose_name='Free Access')),
                ('is_trial', models.BooleanField(default=False, verbose_name='Trial Access')),
                ('trial_end', models.DateTimeField(blank=True, null=True, verbose_name='Trial End')),
                ('plan_subscribed', models.IntegerField(blank=True, null=True, verbose_name='Plan Subscribed')),
                ('user', models.OneToOneField(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='user_subscription', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'UserSubscription',
                'verbose_name_plural': 'UserSubscriptions',
            },
        ),
        migrations.CreateModel(
            name='UserPreference',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Created At')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Last Updated At')),
                ('updated_by', models.IntegerField(blank=True, null=True, verbose_name='Updated by')),
                ('is_deleted', models.BooleanField(default=False, verbose_name='Is Deleted')),
                ('deleted_at', models.DateTimeField(blank=True, null=True)),
                ('prefer_climbing', models.IntegerField(blank=True, choices=[(0, 'Rope Climbing'), (1, 'Bouldering'), (2, 'Both')], null=True, verbose_name='Prefer Climbing')),
                ('grading', multiselectfield.db.fields.MultiSelectField(choices=[('R0', 'YDS_SCALE'), ('R1', 'FRANCIA'), ('R2', 'UIAA'), ('R3', 'AUS'), ('R4', 'LIVELLO'), ('B0', 'V_SYSTEM'), ('B1', 'FONTAINEBLEAU')], max_length=20, verbose_name='Grading')),
                ('bouldering', models.IntegerField(blank=True, choices=[(0, 'V0'), (1, 'V1'), (2, 'V2'), (3, 'V3'), (4, 'V4'), (5, 'V5'), (6, 'V6'), (7, 'V7'), (8, 'V8'), (9, 'V9')], null=True, verbose_name='Bouldering')),
                ('top_rope', models.IntegerField(blank=True, choices=[(0, 'A'), (1, 'B'), (2, 'C'), (3, 'D'), (4, 'E')], null=True, verbose_name='Top Rope')),
                ('lead_climbing', models.IntegerField(blank=True, choices=[(0, 'A'), (1, 'B'), (2, 'C'), (3, 'D'), (4, 'E')], null=True, verbose_name='Lead Climbing')),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='user_preference', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'UserPreference',
                'verbose_name_plural': 'UserPreferences',
            },
        ),
        migrations.CreateModel(
            name='UserDetails',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Created At')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Last Updated At')),
                ('updated_by', models.IntegerField(blank=True, null=True, verbose_name='Updated by')),
                ('is_deleted', models.BooleanField(default=False, verbose_name='Is Deleted')),
                ('deleted_at', models.DateTimeField(blank=True, null=True)),
                ('date_of_birth', models.DateField(blank=True, null=True, verbose_name='date Of Birth')),
                ('user_avatar', models.CharField(blank=True, max_length=255, null=True, verbose_name='User Image')),
                ('age', models.CharField(blank=True, max_length=3, null=True, verbose_name='Age')),
                ('gender', models.IntegerField(choices=[(1, 'Male'), (2, 'Female'), (3, 'Transgender')], null=True, verbose_name='Gender')),
                ('login_count', models.IntegerField(default=0, verbose_name='Login Count')),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='user_details', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'UserDetail',
                'verbose_name_plural': 'UserDetails',
            },
        ),
        migrations.CreateModel(
            name='Role',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Created At')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Last Updated At')),
                ('updated_by', models.IntegerField(blank=True, null=True, verbose_name='Updated by')),
                ('is_deleted', models.BooleanField(default=False, verbose_name='Is Deleted')),
                ('deleted_at', models.DateTimeField(blank=True, null=True)),
                ('name', models.IntegerField(choices=[(1, 'Climber'), (2, 'Gym Owner'), (3, 'Gym Staff'), (4, 'Admin User')], verbose_name='Name')),
                ('role_status', models.BooleanField(default=True, verbose_name='Role Status')),
                ('user', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='user_role', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Role',
                'verbose_name_plural': 'Roles',
            },
        ),
        migrations.CreateModel(
            name='AccountVerification',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Created At')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Last Updated At')),
                ('updated_by', models.IntegerField(blank=True, null=True, verbose_name='Updated by')),
                ('is_deleted', models.BooleanField(default=False, verbose_name='Is Deleted')),
                ('deleted_at', models.DateTimeField(blank=True, null=True)),
                ('token', models.CharField(max_length=100, verbose_name='Token')),
                ('expired_at', models.DateTimeField(verbose_name='Expired At')),
                ('is_used', models.BooleanField(default=False, verbose_name='IsUsed')),
                ('verification_type', models.IntegerField(choices=[(1, 'Email Verification'), (2, 'Forgot Password'), (3, 'Other')], verbose_name='Verification Type')),
                ('user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='user_token', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'AccountVerification',
                'verbose_name_plural': 'AccountVerifications',
            },
        ),
        migrations.CreateModel(
            name='UserSettings',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Created At')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Last Updated At')),
                ('updated_by', models.IntegerField(blank=True, null=True, verbose_name='Updated by')),
                ('is_deleted', models.BooleanField(default=False, verbose_name='Is Deleted')),
                ('deleted_at', models.DateTimeField(blank=True, null=True)),
                ('is_notification_allowed', models.BooleanField(default=True, verbose_name='Is notification allowed')),
                ('is_location_allowed', models.BooleanField(default=True, verbose_name='Is location allowed')),
                ('user', models.OneToOneField(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='user_settings', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'BaseModel',
                'verbose_name_plural': 'BaseModels',
                'abstract': False,
                'index_together': {('created_at', 'updated_at')},
            },
        ),
    ]
